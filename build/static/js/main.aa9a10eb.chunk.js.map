{"version":3,"sources":["services/numbersService.js","Notification.js","PersonForm.js","Filter.js","Persons.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","updateNumber","updatedPerson","axios","put","id","styleMap","success","backgroundColor","error","Notification","message","classStyle","console","log","style","PersonForm","persons","setPersons","useState","setMessage","setClassStyle","newName","setNewName","newNumber","setNewNumber","showTemporaryMessage","setTimeout","handleSubmit","event","a","preventDefault","map","person","name","includes","curPerson","find","window","confirm","number","res","personsUpdated","_id","newPerson","Date","now","newObject","post","then","data","catch","err","response","handleChange","target","value","onSubmit","onChange","type","Filter","setFilterName","filterName","filtered","filter","toLowerCase","startsWith","deleteNumber","personToDelete","delete","updatedPersons","index","onClick","App","useEffect","get","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPACMA,EAAU,oCAcHC,EAAe,SAAAC,GAC1B,OAAOC,IAAMC,IAAIJ,EAAU,IAAME,EAAcG,GAAIH,ICb/CI,EAAW,CACfC,QAAS,CACPC,gBAAiB,SAEnBC,MAAO,CACLD,gBAAiB,QAaNE,MATf,YAAgD,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WAE/B,OADAC,QAAQC,IAAI,aAAcF,GACV,OAAZD,EACK,KAGF,qBAAKI,MAAOT,EAASM,GAArB,SAAmCD,KCd7B,SAASK,EAAT,GAA8C,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WAAc,EAC5BC,mBAAS,IADmB,mBACnDR,EADmD,KAC1CS,EAD0C,OAEtBD,mBAAS,IAFa,mBAEnDP,EAFmD,KAEvCS,EAFuC,OAI5BF,mBAAS,iBAJmB,mBAInDG,EAJmD,KAI1CC,EAJ0C,OAKxBJ,mBAAS,mBALe,mBAKnDK,EALmD,KAKxCC,EALwC,KAOpDC,EAAuB,SAACf,EAASI,GACrCK,EAAWT,GACXU,EAAcN,GAEdY,YAAW,WACTP,EAAW,QACV,MAGCQ,EAAY,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,yDACnBD,EAAME,kBACQd,EAAQe,KAAI,SAAAC,GAAM,OAAIA,EAAOC,QAAMC,SAASb,GAFvC,oBAIXc,EAAYnB,EAAQoB,MAAK,SAAAJ,GAAM,OAAIA,EAAOC,OAASZ,KACzDT,QAAQC,IAAI,YAAasB,IAEvBE,OAAOC,QACLjB,EACE,6EATW,wBAYTpB,EAZS,2BAYYkC,GAZZ,IAYuBI,OAAQhB,IAZ/B,mBAcKvB,EAAaC,GAdlB,QAcPuC,EAdO,OAePC,EAAiBzB,EAAQe,KAAI,SAAAC,GACjC,OAAOA,EAAOU,MAAQzC,EAAcyC,IAAMzC,EAAgB+B,KAE5Df,EAAWwB,GACX7B,QAAQC,IAAI2B,GACZf,EAAqB,GAAD,OACfU,EAAUF,KADK,2CACkCE,EAAUI,OAD5C,eACyDhB,GAC3E,WAtBW,kDAyBbX,QAAQC,IAAIsB,GACZf,EAAc,SACdK,EAAqB,kBAAD,OACAU,EAAUF,KADV,yCAElB,SAEFrB,QAAQC,IAAR,MA/Ba,iDAiDb8B,EAAY,CAAEV,KAAMZ,EAASkB,OAAQhB,EAAWnB,GAAIwC,KAAKC,OAjD5C,WFbEC,EE+DLH,EF9DXzC,IAAM6C,KAAKhD,EAAS+C,IE+DtBE,MAAK,SAAAR,GACJ5B,QAAQC,IAAI2B,EAAIS,MAChBhC,EAAW,GAAD,mBAAKD,GAAL,CAAc2B,KACxBlB,EAAqB,SAAD,OAAUkB,EAAUV,MAAQ,cAEjDiB,OAAM,SAAAC,GACL1B,EAAqB0B,EAAIC,SAASH,KAAM,SACxCrC,QAAQC,IAAIsC,MA1DG,kCFbE,IAAAL,IEaF,qBAAH,sDA8DZO,EAAe,SAAAzB,GACnB,IACMK,EADSL,EAAM0B,OACDrB,KACpBrB,QAAQC,IAAIe,EAAM0B,OAAOC,OACZ,eAATtB,GACFX,EAAWM,EAAM0B,OAAOC,OAEb,iBAATtB,GACFT,EAAaI,EAAM0B,OAAOC,QAI9B,OACE,gCACE,2CACA,cAAC,EAAD,CAAc7C,QAASA,EAASC,WAAYA,IAC5C,uBAAM6C,SAAU7B,EAAhB,UACE,wCACQ,IACN,uBAAO8B,SAAUJ,EAAcE,MAAOlC,EAASY,KAAK,kBAEtD,0CACU,IACR,uBACEwB,SAAUJ,EACVE,MAAOhC,EACPU,KAAK,oBAGT,8BACE,wBAAQyB,KAAK,SAAb,yBC9GK,SAASC,EAAT,GAAgD,IAA9BC,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,WAK9C,OACE,oDACoB,IAClB,uBAAOJ,SAPU,SAAA7B,GACnBgC,EAAchC,EAAM0B,OAAOC,QAMMA,MAAOM,EAAY5B,KAAK,kBCP9C,SAAS0B,EAAT,GAAsD,IAApC3C,EAAmC,EAAnCA,QAAS6C,EAA0B,EAA1BA,WAAY5C,EAAc,EAAdA,WAChD6C,EAAW9C,EAAQ+C,QAAO,SAAA/B,GAAM,OAClCA,EAAOC,KAAK+B,cAAcC,WAAWJ,EAAWG,kBAG5CE,EAAY,uCAAG,WAAMC,GAAN,iBAAAtC,EAAA,yDACnBjB,QAAQC,IAAIsD,IACR9B,OAAOC,QAAP,iBAAyB6B,EAAelC,OAFzB,0CJGK7B,EICQ+D,EAAezB,IJA1CxC,IAAMkE,OAAOrE,EAAU,IAAMK,GIJf,OAIToC,EAJS,OAKT6B,EAAiBrD,EAAQ+C,QAC7B,SAAA/B,GAAM,OAAIA,EAAOU,MAAQyB,EAAezB,OAE1CzB,EAAWoD,GACXzD,QAAQC,IAAI,UAAW2B,GATR,kDAWf5B,QAAQC,IAAR,MAXe,kCJGK,IAAAT,IIHL,qBAAH,sDA4BZoC,EAAMsB,EAAS/B,KAAI,SAACC,EAAQsC,GAChC,OACE,uCACStC,EAAOC,KADhB,aACgCD,EAAOO,OADvC,IACgD,IAC9C,wBACEgC,QAAS,WACPL,EAAalC,IAFjB,sBAFMsC,MAaZ,OAAO,8BAAM9B,IC7Cf,IA6BegC,EA7BH,WAAO,IAAD,EACctD,mBAAS,IADvB,mBACTF,EADS,KACAC,EADA,OAEoBC,mBAAS,IAF7B,mBAET2C,EAFS,KAEGD,EAFH,KAUhB,OANAa,qBAAU,WLNHvE,IAAMwE,IAAI3E,GKOCiD,MAAK,SAAAR,GACnBvB,EAAWuB,EAAIS,WAEhB,IAGD,gCACE,2CACA,cAACU,EAAD,CACE3C,QAASA,EACT6C,WAAYA,EACZD,cAAeA,IAEjB,cAAC7C,EAAD,CAAYC,QAASA,EAASC,WAAYA,IAC1C,yCACA,cAAC,EAAD,CACED,QAASA,EACTC,WAAYA,EACZ4C,WAAYA,QCjBLc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.aa9a10eb.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseUrl = 'http://localhost:3001/api/persons';\r\n\r\nexport const getAllNumbers = () => {\r\n  return axios.get(baseUrl);\r\n};\r\n\r\nexport const addNumber = newObject => {\r\n  return axios.post(baseUrl, newObject);\r\n};\r\n\r\nexport const deleteNumber = id => {\r\n  return axios.delete(baseUrl + '/' + id);\r\n};\r\n\r\nexport const updateNumber = updatedPerson => {\r\n  return axios.put(baseUrl + '/' + updatedPerson.id, updatedPerson);\r\n};\r\n","import React from 'react';\r\n// import './Notification.css';\r\n\r\nconst styleMap = {\r\n  success: {\r\n    backgroundColor: 'green'\r\n  },\r\n  error: {\r\n    backgroundColor: 'red'\r\n  }\r\n};\r\n\r\nfunction Notification({ message, classStyle }) {\r\n  console.log('classStyle', classStyle);\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div style={styleMap[classStyle]}>{message}</div>;\r\n}\r\n\r\nexport default Notification;\r\n","import React, { useState } from 'react';\r\nimport { addNumber, updateNumber } from './services/numbersService';\r\nimport Notification from './Notification';\r\n\r\nexport default function PersonForm({ persons, setPersons }) {\r\n  const [message, setMessage] = useState('');\r\n  const [classStyle, setClassStyle] = useState('');\r\n\r\n  const [newName, setNewName] = useState('Add name here');\r\n  const [newNumber, setNewNumber] = useState('Add number here');\r\n\r\n  const showTemporaryMessage = (message, style) => {\r\n    setMessage(message);\r\n    setClassStyle(style);\r\n\r\n    setTimeout(() => {\r\n      setMessage(null);\r\n    }, 5000);\r\n  };\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    let hasName = persons.map(person => person.name).includes(newName);\r\n    if (hasName) {\r\n      const curPerson = persons.find(person => person.name === newName);\r\n      console.log('curPerson', curPerson);\r\n      if (\r\n        window.confirm(\r\n          newName +\r\n            ' already exists in the phone book, replace the old number with a new one?'\r\n        )\r\n      ) {\r\n        const updatedPerson = { ...curPerson, number: newNumber };\r\n        try {\r\n          const res = await updateNumber(updatedPerson);\r\n          const personsUpdated = persons.map(person => {\r\n            return person._id === updatedPerson._id ? updatedPerson : person;\r\n          });\r\n          setPersons(personsUpdated);\r\n          console.log(res);\r\n          showTemporaryMessage(\r\n            `${curPerson.name}'s number has been updated from ${curPerson.number} to ${newNumber}`,\r\n            'success'\r\n          );\r\n        } catch (error) {\r\n          console.log(curPerson);\r\n          setClassStyle('error');\r\n          showTemporaryMessage(\r\n            `Information of ${curPerson.name} has already been removed from server`,\r\n            'error'\r\n          );\r\n          console.log(error);\r\n        }\r\n\r\n        // updateNumber(updatedPerson)\r\n        //   .then(res => {\r\n        //     console.log(res);\r\n        //     const personsUpdated = persons.map(person => {\r\n        //       return person.id === updatedPerson.id ? updatedPerson : person;\r\n        //     });\r\n        //     setPersons(personsUpdated);\r\n        //   })\r\n        //   .catch(err => {\r\n        //     console.log(err);\r\n        //   });\r\n      }\r\n      return;\r\n    }\r\n\r\n    const newPerson = { name: newName, number: newNumber, id: Date.now() };\r\n    await addNumber(newPerson)\r\n      .then(res => {\r\n        console.log(res.data);\r\n        setPersons([...persons, newPerson]);\r\n        showTemporaryMessage(`Added ${newPerson.name}`, 'success');\r\n      })\r\n      .catch(err => {\r\n        showTemporaryMessage(err.response.data, 'error');\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    console.log(event.target.value);\r\n    if (name === 'changeName') {\r\n      setNewName(event.target.value);\r\n    }\r\n    if (name === 'changeNumber') {\r\n      setNewNumber(event.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Add a new</h3>\r\n      <Notification message={message} classStyle={classStyle} />\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          name:{' '}\r\n          <input onChange={handleChange} value={newName} name='changeName' />\r\n        </div>\r\n        <div>\r\n          number:{' '}\r\n          <input\r\n            onChange={handleChange}\r\n            value={newNumber}\r\n            name='changeNumber'\r\n          />\r\n        </div>\r\n        <div>\r\n          <button type='submit'>add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Filter({ setFilterName, filterName }) {\r\n  const handleChange = event => {\r\n    setFilterName(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      filter shown with{' '}\r\n      <input onChange={handleChange} value={filterName} name='filterName' />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { deleteNumber as deleteNum } from './services/numbersService';\r\n\r\nexport default function Filter({ persons, filterName, setPersons }) {\r\n  let filtered = persons.filter(person =>\r\n    person.name.toLowerCase().startsWith(filterName.toLowerCase())\r\n  );\r\n\r\n  const deleteNumber = async personToDelete => {\r\n    console.log(personToDelete);\r\n    if (window.confirm(`Delete ${personToDelete.name}`)) {\r\n      try {\r\n        const res = await deleteNum(personToDelete._id);\r\n        const updatedPersons = persons.filter(\r\n          person => person._id !== personToDelete._id\r\n        );\r\n        setPersons(updatedPersons);\r\n        console.log('success', res);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n\r\n      // deleteNum(personToDelete.id)\r\n      //   .then(res => {\r\n      //     const updatedPersons = persons.filter(\r\n      //       person => person.id !== personToDelete.id\r\n      //     );\r\n      //     setPersons(updatedPersons);\r\n      //     console.log('success', res);\r\n      //   })\r\n      //   .catch(err => {\r\n      //     console.log(err);\r\n      //   });\r\n    }\r\n  };\r\n\r\n  const res = filtered.map((person, index) => {\r\n    return (\r\n      <p key={index}>\r\n        Name: {person.name}, Number: {person.number},{' '}\r\n        <button\r\n          onClick={() => {\r\n            deleteNumber(person);\r\n          }}\r\n        >\r\n          delete\r\n        </button>\r\n      </p>\r\n    );\r\n  });\r\n\r\n  return <div>{res}</div>;\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport PersonForm from './PersonForm';\nimport Filter from './Filter';\nimport Persons from './Persons';\nimport { getAllNumbers } from './services/numbersService';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filterName, setFilterName] = useState('');\n\n  useEffect(() => {\n    getAllNumbers().then(res => {\n      setPersons(res.data);\n    });\n  }, []);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter\n        persons={persons}\n        filterName={filterName}\n        setFilterName={setFilterName}\n      />\n      <PersonForm persons={persons} setPersons={setPersons} />\n      <h2>Numbers</h2>\n      <Persons\n        persons={persons}\n        setPersons={setPersons}\n        filterName={filterName}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}